<Application x:Class="DisableNvidiaTelemetryWPF.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:DisableNvidiaTelemetryWPF"
             Startup="App_OnStartup">

    <Application.Resources>


        <Style TargetType="{x:Type Grid}" x:Key="GrayHoneycomb">
            <Setter Property="Background">
                <Setter.Value>
                    <ImageBrush ImageSource="Resources/honeycomb-gray.png" Viewport="0,0,56,57"
                                ViewportUnits="Absolute"
                                TileMode="Tile"
                                Stretch="None"
                                AlignmentX="Left"
                                AlignmentY="Top" />
                </Setter.Value>

            </Setter>
        </Style>

        <Style TargetType="{x:Type Grid}" x:Key="DarkHoneycomb">
            <Setter Property="Background">
                <Setter.Value>
                    <ImageBrush ImageSource="Resources/honeycomb-dark.png" Viewport="0,0,56,57"
                                ViewportUnits="Absolute"
                                TileMode="Tile"
                                Stretch="None"
                                AlignmentX="Left"
                                AlignmentY="Top" />
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Hyperlink}">
            <Setter Property="Foreground" Value="#76B900" />
            <Setter Property="TextDecorations" Value="" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="#5D8C00" />
                    <Setter Property="Cursor" Value="Hand" />
                </Trigger>
            </Style.Triggers>
        </Style>


        <Style TargetType="{x:Type ProgressBar}">
            <Setter Property="Foreground" Value="#76B900" />
            <Setter Property="Background" Value="#BEBEBE" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Maximum" Value="100" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <LinearGradientBrush EndPoint=".5,1" StartPoint=".5,0">
                        <GradientStop Color="#FFAEB7BF" Offset="0" />
                        <GradientStop Color="#FF919EA7" Offset="0.35" />
                        <GradientStop Color="#FF7A8A99" Offset="0.35" />
                        <GradientStop Color="#FF647480" Offset="1" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Margin" Value="0,0,0,0" />
        </Style>

        <Style TargetType="{x:Type Button}">
            <Setter Property="Background" Value="#76B900" />
            <Setter Property="Foreground" Value="#FFFFFF" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Padding" Value="10" />
        </Style>

        <Style TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="#FFFFFF" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Padding" Value="4" />
        </Style>

        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="#2d2d30" />
            <Setter Property="Foreground" Value="#FFFFFF" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBoxBase}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="False"
                                          HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Visible" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="border" Value="0" />
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="Background" Value="#2d2d30" />
                                <Setter Property="BorderBrush" Value="#030303" />
                                <Setter Property="BorderThickness" Value="0" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ContextMenu}">
            <Setter Property="Background" Value="#242424" />
            <Setter Property="Foreground" Value="#C2C2C2" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="BorderBrush" Value="#6A6A6A" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContextMenu}">
                        <Border BorderThickness="1" BorderBrush="Black" x:Name="Border" Background="#333337">
                            <StackPanel ClipToBounds="True" Orientation="Vertical" IsItemsHost="True" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type MenuItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Border x:Name="Bd" Padding="17,5,17,5" BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" SnapsToDevicePixels="True" Uid="Border_38">
                            <ContentPresenter x:Name="ContentPresenter" Content="{TemplateBinding Header}"
                                              ContentSource="Header" Margin="{TemplateBinding Padding}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              Uid="ContentPresenter_33" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter Property="Background" TargetName="Bd" Value="#6A6A6A" />
                                <Setter Property="BorderBrush" TargetName="Bd" Value="#777777" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ListView}">
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="Background" Value="#242424" />
        </Style>

        <Style TargetType="ListViewItem" x:Key="DarkListView">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="#FFFFFF" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="true">
                            <GridViewRowPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="#000000" />
                    <Setter Property="Background" Value="#6BA504" />
                    <Setter Property="BorderBrush" Value="#6BA504" />
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Foreground" Value="#000000" />
                    <Setter Property="Background" Value="#6BA504" />
                    <Setter Property="BorderBrush" Value="#6BA504" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                        <Border BorderThickness="0,0,0,1" BorderBrush="#6A6A6A" Background="#242424"
                                Margin="-1, 0, 0, 0">
                            <TextBlock x:Name="ContentHeader" Text="{TemplateBinding Content}" Padding="10,5,5,5"
                                       Width="{TemplateBinding Width}" FontWeight="Bold" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Background" Value="#242424" />
            <Setter Property="Foreground" Value="#C2C2C2" />

        </Style>

        <Style TargetType="{x:Type TabControl}">
            <Setter Property="Foreground" Value="#FFFFFF" />
            <Setter Property="BorderThickness" Value="0.0, 0, 0, 0" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="Background" Value="Transparent" />
        </Style>

        <Style TargetType="{x:Type TabItem}">

            <Setter Property="Foreground" Value="#C2C2C2" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">

                        <Border Name="Border" BorderThickness="0,0,0.5,00.9" BorderBrush="#6A6A6A" Padding="8">
                            <ContentPresenter x:Name="ContentSite"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Center"
                                              ContentSource="Header"
                                              Height="65" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#333337" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="#242424" />
                                <Setter Property="Background" Value="#777777" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True" />
                                    <Condition Property="IsSelected" Value="False" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Border" Property="Background" Value="#333337" />
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!-- CheckBox -->


        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true"
                                   Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                   StrokeThickness="10" StrokeDashArray="1 2" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070" />
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true"
                                   Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                   StrokeThickness="1" StrokeDashArray="1 2" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#6BA504" />
        <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF" />
        <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FFFFFF" />
        <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#6BA504" />
        <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC" />
        <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FFFFFF" />
        <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#6BA504" />
        <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#6BA504" />
        <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#6BA504" />
        <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FFFFFF" />
        <Style TargetType="{x:Type CheckBox}">

            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            <Setter Property="Background" Value="#6BA504" />
            <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}" />
            <Setter Property="Foreground" Value="#CCCCCC" />
            <Setter Property="BorderThickness" Value="2" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Border x:Name="checkBoxBorder" BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid x:Name="markGrid">
                                    <Path x:Name="optionMark"
                                          Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z "
                                          Fill="{StaticResource OptionMark.Static.Glyph}" Margin="4" Opacity="0"
                                          Stretch="None" />
                                    <Rectangle x:Name="indeterminateMark"
                                               Fill="{StaticResource OptionMark.Static.Glyph}" Margin="2" Opacity="0" />
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}" />
                                <Setter Property="Padding" Value="4,2,0,0" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder"
                                        Value="{StaticResource OptionMark.MouseOver.Background}" />
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder"
                                        Value="{StaticResource OptionMark.MouseOver.Border}" />
                                <Setter Property="Fill" TargetName="optionMark"
                                        Value="{StaticResource OptionMark.MouseOver.Glyph}" />
                                <Setter Property="Fill" TargetName="indeterminateMark"
                                        Value="{StaticResource OptionMark.MouseOver.Glyph}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="checkBoxBorder"
                                        Value="{StaticResource OptionMark.Disabled.Background}" />
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder"
                                        Value="{StaticResource OptionMark.Disabled.Border}" />
                                <Setter Property="Fill" TargetName="optionMark"
                                        Value="{StaticResource OptionMark.Disabled.Glyph}" />
                                <Setter Property="Fill" TargetName="indeterminateMark"
                                        Value="{StaticResource OptionMark.Disabled.Glyph}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder"
                                        Value="{StaticResource OptionMark.Pressed.Background}" />
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder"
                                        Value="{StaticResource OptionMark.Pressed.Border}" />
                                <Setter Property="Fill" TargetName="optionMark"
                                        Value="{StaticResource OptionMark.Pressed.Glyph}" />
                                <Setter Property="Fill" TargetName="indeterminateMark"
                                        Value="{StaticResource OptionMark.Pressed.Glyph}" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder"
                                        Value="{StaticResource OptionMark.Pressed.Background}" />
                                <Setter Property="Opacity" TargetName="optionMark" Value="1" />
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="0" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="false">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="Transparent" />
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder"
                                        Value="{StaticResource OptionMark.Static.Border}" />
                                <Setter Property="Opacity" TargetName="optionMark" Value="0" />
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="0" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Opacity" TargetName="optionMark" Value="0" />
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="1" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- End CheckBox -->


        <ControlTemplate x:Key="ButtonBaseControlTemplate" TargetType="{x:Type ButtonBase}">
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"
                    SnapsToDevicePixels="True">
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}"
                                  Content="{TemplateBinding Content}"
                                  ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border"
                            Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#5D8C00" />
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#76B900" />
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B" />
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#5D8C00" />
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="border" Value="#76B900" />
                    <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5" />
                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF838383" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>


        <ControlTemplate x:Key="CustomProgressBar" TargetType="{x:Type ProgressBar}">
            <Grid Name="TemplateRoot" SnapsToDevicePixels="True">
                <Rectangle RadiusX="2" RadiusY="2" Fill="Transparent" />
                <Border CornerRadius="0,0,0,0" Margin="1,1,1,1">
                    <Border.Background>
                        <SolidColorBrush Color="Transparent" />
                    </Border.Background>
                </Border>
                <Border BorderThickness="0,0,0,0" BorderBrush="Transparent" Margin="1,1,1,1">
                    <Border.Background>
                        <SolidColorBrush Color="Transparent" />
                    </Border.Background>
                </Border>
                <Rectangle Name="PART_Track" Margin="1,1,1,1" />
                <Decorator Name="PART_Indicator" Margin="1,1,1,1" HorizontalAlignment="Left">
                    <Grid Name="Foreground">
                        <Rectangle Fill="Transparent" Name="Indicator" />
                        <Grid Name="Animation" ClipToBounds="True">
                            <Border Name="PART_GlowRect" Width="100" Margin="0,0,0,0" HorizontalAlignment="Left"
                                    Background="LightBlue" />
                        </Grid>
                        <Grid Name="Overlay" />
                    </Grid>
                </Decorator>
                <Border BorderThickness="0" CornerRadius="0,0,0,0" BorderBrush="Transparent" />
            </Grid>
        </ControlTemplate>

        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
            <Border x:Name="PART_ContentHost" Focusable="True" />
        </ControlTemplate>

        <Style x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="32" />
                            </Grid.ColumnDefinitions>
                            <Border
                                x:Name="Border"
                                Grid.ColumnSpan="2"
                                CornerRadius="0"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1" />
                            <Border
                                Grid.Column="0"
                                CornerRadius="0"
                                Background="Transparent"
                                BorderBrush="Transparent"
                                BorderThickness="10" />
                            <Path
                                x:Name="Arrow"
                                Grid.Column="1"
                                Fill="{TemplateBinding Foreground}"
                                Stroke="{TemplateBinding Foreground}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="M 0 0 L 8 12 L 16 0 Z" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="LightGray" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="Gray" />
                                <Setter Property="Foreground" Value="Gray" />
                                <Setter TargetName="Arrow" Property="Fill" Value="Gray" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="FontWeight" Value="Regular" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBoxItem">
                        <Border
                            Name="Border"
                            Padding="5"
                            Margin="2"
                            BorderThickness="1"
                            CornerRadius="0"
                            Background="Transparent"
                            BorderBrush="Transparent">

                            <TextBlock TextAlignment="Center">
                                <ContentPresenter />
                            </TextBlock>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Border" Property="BorderBrush" Value="Gray" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="Foreground" Value="Gray" />
            <Setter Property="BorderBrush" Value="Gray" />
            <Setter Property="Background" Value="#2d2d30" />
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="FontWeight" Value="Regular" />
            <Setter Property="MinWidth" Value="50" />
            <Setter Property="MinHeight" Value="24" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton
                                Name="ToggleButton"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                Foreground="{TemplateBinding Foreground}"
                                Style="{StaticResource ComboBoxToggleButton}"
                                Grid.Column="2"
                                Focusable="false"
                                IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                ClickMode="Press" />
                            <ContentPresenter
                                Name="ContentSite"
                                IsHitTestVisible="False"
                                Content="{TemplateBinding SelectionBoxItem}"
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                Margin="10,3,30,3"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center" />
                            <TextBox x:Name="PART_EditableTextBox"
                                     Style="{x:Null}"
                                     Template="{StaticResource ComboBoxTextBox}"
                                     HorizontalAlignment="Center"
                                     VerticalAlignment="Center"
                                     Margin="3,3,23,3"
                                     Focusable="True"
                                     Visibility="Hidden"
                                     IsReadOnly="{TemplateBinding IsReadOnly}" />
                            <Popup
                                Name="Popup"
                                Placement="Bottom"
                                IsOpen="{TemplateBinding IsDropDownOpen}"
                                AllowsTransparency="True"
                                Focusable="False"
                                PopupAnimation="Slide">
                                <Grid
                                    Name="DropDown"
                                    SnapsToDevicePixels="True"
                                    MinWidth="{TemplateBinding ActualWidth}"
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border
                                        x:Name="DropDownBorder"
                                        Background="#2d2d30"
                                        BorderThickness="1"
                                        BorderBrush="Gray" />
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True"
                                                    KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>

                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                            </Trigger>
                            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0" />
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
                            </Trigger>
                            <Trigger Property="IsEditable" Value="true">
                                <Setter Property="IsTabStop" Value="false" />
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
            </Style.Triggers>
        </Style>

        <!-- Begin Switch Control -->

        <SolidColorBrush x:Key="CheckedBackgroundColor" Color="#76B900" />
        <SolidColorBrush x:Key="UncheckedBackgroundColor" Color="#FF939393" />
        <Style x:Key="SwitchCheckBox" TargetType="{x:Type CheckBox}">
            <Setter Property="Foreground" Value="#C2C2C2" />
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <DockPanel x:Name="dockPanel">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              Content="{TemplateBinding Content}"
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              RecognizesAccessKey="True" VerticalAlignment="Center"
                                              HorizontalAlignment="Right" />
                            <Grid Margin="10, 0, 0, 0" HorizontalAlignment="Right">

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>

                                <TextBlock x:Name="On" Grid.Column="0" HorizontalAlignment="Right" Padding="8"
                                           VerticalAlignment="Center" TextAlignment="Center" Foreground="#FFFFFF"
                                           Text="{Binding Path=(local:SwitchCheckbox.EnabledText), UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Self}}" />
                                <TextBlock x:Name="Off" Grid.Column="1" HorizontalAlignment="Center" Padding="8"
                                           VerticalAlignment="Center" TextAlignment="Center" Foreground="#FFFFFF"
                                           Text="{Binding Path=(local:SwitchCheckbox.DisabledText), UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Self}}" />

                            </Grid>
                        </DockPanel>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="On" Property="Background"
                                        Value="{StaticResource CheckedBackgroundColor}" />
                                <Setter TargetName="Off" Property="Background"
                                        Value="{StaticResource UncheckedBackgroundColor}" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="false">
                                <Setter TargetName="On" Property="Background"
                                        Value="{StaticResource UncheckedBackgroundColor}" />
                                <Setter TargetName="Off" Property="Background"
                                        Value="{StaticResource CheckedBackgroundColor}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- End Switch Control -->

    </Application.Resources>
</Application>