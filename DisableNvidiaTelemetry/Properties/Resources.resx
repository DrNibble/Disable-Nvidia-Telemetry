<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ApplicationLicense" xml:space="preserve">
    <value>This software is provided 'as-is', without any express or implied warranty. In no event will the authors be held liable for any damages arising from the use of this software. 

Redistribution of this software is allowed, but the origin of this software must not be misrepresented; you must not claim that you wrote the original software.</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="binoculars_64" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\binoculars-64.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="GitHub_Mark_64px" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\GitHub-Mark-64px.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="btn_donate_92x26" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\btn_donate_92x26.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="GithubUrl" xml:space="preserve">
    <value>https://github.com/NateShoffner/Disable-Nvidia-Telemetry</value>
  </data>
  <data name="Homepage" xml:space="preserve">
    <value>https://nateshoffner.com</value>
  </data>
  <data name="PaypalUrl" xml:space="preserve">
    <value>https://www.paypal.com/cgi-bin/webscr?cmd=_donations&amp;business=nate.shoffner@gmail.com&amp;lc=US&amp;item_name=Disable%20Nvidia%20Telemetry&amp;currency_code=USD&amp;bn=PP%2dDonationsBF</value>
  </data>
  <data name="Telemetry_serivces" xml:space="preserve">
    <value>Telemetry Services</value>
  </data>
  <data name="Telemetry_tasks" xml:space="preserve">
    <value>Telemetry Tasks</value>
  </data>
  <data name="Update_available" xml:space="preserve">
    <value>Update Available</value>
  </data>
  <data name="Update_available_message" xml:space="preserve">
    <value>A new update is available, would you like to download it?</value>
  </data>
  <data name="No_Upades" xml:space="preserve">
    <value>No Updates</value>
  </data>
  <data name="No_updates_available_message" xml:space="preserve">
    <value>There are no updates available.</value>
  </data>
  <data name="Update_error_messsage" xml:space="preserve">
    <value>There was an error while checking for updates.</value>
  </data>
  <data name="Update_error" xml:space="preserve">
    <value>Update Error</value>
  </data>
  <data name="Disabled" xml:space="preserve">
    <value>Disabled</value>
  </data>
  <data name="Enabled" xml:space="preserve">
    <value>Enabled</value>
  </data>
  <data name="Failed_to_disable_registry_item" xml:space="preserve">
    <value>Failed to disable registry item</value>
  </data>
  <data name="Failed_to_disable_task" xml:space="preserve">
    <value>Failed to disable task</value>
  </data>
  <data name="Failed_to_enable_registry_item" xml:space="preserve">
    <value>Failed to enable registry item</value>
  </data>
  <data name="Failed_to_enable_task" xml:space="preserve">
    <value>Failed to enable task</value>
  </data>
  <data name="Failed_to_find_registry_item" xml:space="preserve">
    <value>Failed to find registry item</value>
  </data>
  <data name="Failed_to_find_service" xml:space="preserve">
    <value>Failed to find service</value>
  </data>
  <data name="Failed_to_find_task" xml:space="preserve">
    <value>Failed to find task</value>
  </data>
  <data name="Failed_to_start_service" xml:space="preserve">
    <value>Failed to start service</value>
  </data>
  <data name="Failed_to_stop_service" xml:space="preserve">
    <value>Failed to stop service</value>
  </data>
  <data name="Found_registry_item" xml:space="preserve">
    <value>Found registry item</value>
  </data>
  <data name="Found_service" xml:space="preserve">
    <value>Found service</value>
  </data>
  <data name="Found_task" xml:space="preserve">
    <value>Found task</value>
  </data>
  <data name="Registry_item_disabled" xml:space="preserve">
    <value>Registry item disabled</value>
  </data>
  <data name="Registry_item_enabled" xml:space="preserve">
    <value>Registry item enabled</value>
  </data>
  <data name="Registry_item_is" xml:space="preserve">
    <value>Registry item is</value>
  </data>
  <data name="Service" xml:space="preserve">
    <value>Service</value>
  </data>
  <data name="Service_is" xml:space="preserve">
    <value>Service is</value>
  </data>
  <data name="Service_started" xml:space="preserve">
    <value>Service started</value>
  </data>
  <data name="Automatic" xml:space="preserve">
    <value>Automatic</value>
  </data>
  <data name="Automatic_service_startup_disabled" xml:space="preserve">
    <value>Automatic service startup disabled</value>
  </data>
  <data name="Automatic_service_startup_enabled" xml:space="preserve">
    <value>Automatic service startup enabled</value>
  </data>
  <data name="Automatic_service_startup_failed" xml:space="preserve">
    <value>Automatic service startup failed</value>
  </data>
  <data name="Disable_service_startup_failed" xml:space="preserve">
    <value>Disable service startup failed</value>
  </data>
  <data name="Manual" xml:space="preserve">
    <value>Manual</value>
  </data>
  <data name="Service_startup_mode" xml:space="preserve">
    <value>Service startup mode</value>
  </data>
  <data name="Service_stopped" xml:space="preserve">
    <value>Service stopped</value>
  </data>
  <data name="Task" xml:space="preserve">
    <value>Task</value>
  </data>
  <data name="Task_disabled" xml:space="preserve">
    <value>Task disabled</value>
  </data>
  <data name="Task_enabled" xml:space="preserve">
    <value>Task enabled</value>
  </data>
  <data name="Task_is" xml:space="preserve">
    <value>Task is</value>
  </data>
  <data name="Version" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="AdministratorRequired" xml:space="preserve">
    <value>Administrator Required</value>
  </data>
  <data name="Please_run_the_program_as_administrator_to_continue" xml:space="preserve">
    <value>Please run the program as administrator to continue.</value>
  </data>
  <data name="All_Disabled" xml:space="preserve">
    <value>All Disabled</value>
  </data>
  <data name="Disable_Nvidia_Telemetry" xml:space="preserve">
    <value>Disable Nvidia Telemetry</value>
  </data>
  <data name="Silently_disabling_telemetry_registry_items" xml:space="preserve">
    <value>Silently disabling telemetry registry items</value>
  </data>
  <data name="Silently_disabling_telemetry_services" xml:space="preserve">
    <value>Silently disabling telemetry services</value>
  </data>
  <data name="Silently_disabling_telemetry_tasks" xml:space="preserve">
    <value>Silently disabling telemetry tasks</value>
  </data>
  <data name="Telemetry_registry_items" xml:space="preserve">
    <value>Telemetry Registry Items</value>
  </data>
  <data name="Task_scheduler_description" xml:space="preserve">
    <value>Disables Nvidia telemetry services and tasks on startup.</value>
  </data>
  <data name="Task_scheduler_name" xml:space="preserve">
    <value>Disable Nvidia Telemetry</value>
  </data>
  <data name="Logging_disabled_on_read_only_device" xml:space="preserve">
    <value>Logging disabled on read-only device</value>
  </data>
</root>